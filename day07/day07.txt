元组　tuple
    元组是不可变的序列，同list一样，元组是可以存储任意类型的数据的容器。
元组的表示方法：
    用小括号（）括起来，单个元素括起来后加逗号（，）区分单个对象还是元组。
创建非空元组的字面值：
    t=()

创建非空元组的字面值：(逗号是元组中非常关键的东西,逗号不能省)
    t=1000,
    t=(20,)
    t=(1,2,3)
    t=100,200,300
元祖的构造函数　tuple
    tuple()　　空元组
    tuple(iterable) 可用迭代对象生成一个新的元组

索引与切片：
    索引取值与切片取值的规则与列表完全相同
    注意：元组不支持索引赋值和切片赋值。

字典　dict:
    字典是一种可变的容器，可以存储任意类型的数据。
    字典中的每一个数据都是用‘键’(key)进行索引的，而像序列(str,list,tuple)可以用整数进行索引
    字典中的数据没有先后顺序关系，洗点的存储是元序
    字典中的数据以键(key)（目录）-值(value)（内容）对形式进行存储的
    字典的键不能重复，且只能用不可变类型作为字典的
创建字典的字面值方式：
    字典的表示方式以｛｝括起来，以冒号（：）分隔键值对，各键值对之间用逗号分隔开




创建字典的构造函数：
    dict ()


可变的类型有四种：
    list(列表)
    dict(字典)
    set(集合)
    bytearray(字节数组)
    其余的皆为不可变类型

字典的基本操作：
    字典的键索引：
        语法：
            字典[键]
        作用：
            用键获取字典的键对应的值

    示例：
    d = {'name':'tarena','age':16}
    print(d['name'],"的年龄是"，d['age'])
添加和修改字典的元素：
    语法：
        字典[键]　＝　值
    说明：
        键不存在时，创建键，并让键绑定对应的值
        键存在，修改键绑定的值
删除字典元素：
    del 语句
        语法：
            del 字典[键]
    示意：
        d = dict{name:'小李',age:12}
        del d['name']
        print(d)
            del 字典[键]
    示意：
        d = dict{name:'小李',age:12}
        del d['name']
        print(d)
字典的迭代访问：
    字典是可迭代对象，字典只能对键进行迭代访问
    示例：
        d = {0:'零',1:'壹',2:'贰',3:'叁'}
        for i in d:
            print(d[i])
可以用于字典的函数：(都是对于字典的键来说的)
    len(d)
    max(d)
    min(d)
    sum(d)  返回所有键的和
    any(d)
    all(d)

dict.md　　字典常用函数

字典推倒式：
    语法：
        a = {键表达式：值表达式　for 变量 in 可迭代对象 [if 真值表达式]}
        注：(　[]里的内容可以省略　)
    示例：
        a = {x:x**2 for x in range(10) }
字典推到式的嵌套：
    语法同列表推倒式嵌套


字典　ＶＳ　列表
    １、都是可变的容器
    ２、索引方式不同，列表用整数索引，字典用键索引
    ３、列表是有序的，字典的存储是无序的
    ４、字典的插入，删除，修改的速度可能会快鱼列表（重要）


练习：
    写一个程序，让用户分两次输入一人的信息：
        信息包含　姓名和电话号码
    让用户输入多个人的信息，当输入姓名为空时结束输入
    把用户输入的数据存于字典中
        姓名作为键，电话号码作为值
    最后打印存储数据的字典

字典的键判断：in ,not in 运算符
    可以用 in 运算符判断一个键是否存在于字典中，如果存在则返回True,否则返回False
    not in 和　in 返回值相反

练习：
    １、生成前４０个斐波那契数列（fibonacci 数列）
    　１　１　２　３　５　８　１３　２１
    要求：
        将这些数存在列表中
        打印列表
    ２、有一只小猴子，摘了很多桃，
        第一天吃了全部桃子的一半，感觉不饱又吃了一个
        第二天吃了剩下的一半，感觉不饱又吃了一个
        以此类推
        ..........
        到了第十天，发现还剩下一个
        问：第一天摘了多少桃子
    ３、打印九九乘法表:
        １＊１＝１
        １＊２＝２　2 * 2 = 4
    ４、任意输入很多个学生的“姓名”“年龄”“成绩（０～１００）”
        每个学生的信息存入到字典中，然后再放到列表内。
        如：
            请输入姓名：tarena 
            请输入年龄：12
            请输入成绩：33
            请输入姓名：china 
            请输入年龄：13
            请输入成绩：99
            请输入姓名：<回车>　　　输入结束





